% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compare_ecdf.R
\name{ecdf_comparison}
\alias{ecdf_comparison}
\title{Compare the observed expression data to the training data distribution}
\usage{
ecdf_comparison(X, train_expr, gs = NULL, tail = "both")
}
\arguments{
\item{X}{matrix of expression data. Rows are genes and columns are subjects}

\item{train_expr}{matrix of reference expression data. Rows are genes and columns are subjects}

\item{gs}{Either a list of gene sets or indices of genes to compare the distributions. If NULL, then will default to using all genes}

\item{tail}{Either 'both', 'left', or 'right'. Specifies which side of the distribution to estimate probabilities.}
}
\value{
returns object of S3 class 'ecdf_comparison' with the following:
\itemize{
\item probabilities: Matrix with rows for subjects and columns for features containing the estimated probabilities that the input data falls on the emperical distribution of the reference data
\item tail: User input for which tail to use
\item gs: The set of genes (if any) that was input by the user
}
}
\description{
This function estimates the probability of observing the expression data as compared to the training data's empirical
distribution. The distribution is estimated for each gene separately, and then each of the observed values is compared
against the estimated distribution. To evaluate a directional bias, the tail of distribution may be specified.

If tail="both", the calculation closely mimics a two-sided p-value calculation where the probability equals
2*Pr_training(-|observed|), where Pr_training() denotes the empirical CDF from the training data.

If tail="right", the probability equals 1-Pr_training(observed). I.e., this is the probability that the training data
is greater than the observed value.

If tail="left", the probability equals Pr_training(observed). I.e., this is the probability that the training data
is less than the observed value.
}
\examples{
\dontrun{
# Simulate reference data
reference_data <- simulate_data()
# Simulate input data (similar distribution)
input_data <- simulate_data()
# Simulate input data (convert to count data so different than reference)
input_data_counts <- simulate_data()
input_data_counts$x <- ceiling(10^input_data_counts$x)

# Estimate probabilities for the values from comparable distributions
gene_probs_similar <- ecdf_comparison(X = input_data$x,
                                      train_expr = reference_data$x,
                                      tail = "both")
# Plot the gene probability summaries
plot(gene_probs_similar)

# Estimate probabilities for the values from different distributions
# i.e., counts versus normally distributed
gene_probs_different <- ecdf_comparison(X = input_data_counts$x,
                                        train_expr = reference_data$x,
                                        tail = "both")
# Plot the gene probability summaries
plot(gene_probs_different)
}

}
\author{
Lorin Towle-Miller
}
